I0415 11:42:13.221312     1 upgrade_proto.cpp:1082] Attempting to upgrade input file specified using deprecated 'solver_type' field (enum)': cifar10_mlp_solver_simple3.prototxt
I0415 11:42:13.221918     1 upgrade_proto.cpp:1089] Successfully upgraded file specified using deprecated 'solver_type' field (enum) to 'type' field (string).
W0415 11:42:13.222056     1 upgrade_proto.cpp:1091] Note that future Caffe releases will only support 'type' field (string) for a solver's type.
I0415 11:42:13.222374     1 caffe.cpp:211] Use CPU.
I0415 11:42:13.222756     1 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 1000
base_lr: 0.0001
display: 1000
max_iter: 10000
lr_policy: "fixed"
momentum: 0.97
weight_decay: 0.004
snapshot: 1000
snapshot_prefix: "temp/mlp_simple"
solver_mode: CPU
net: "examples/cifar10/cifar10_mlp_train_test_5layers.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_format: HDF5
type: "SGD"
I0415 11:42:13.225353     1 solver.cpp:87] Creating training net from net file: examples/cifar10/cifar10_mlp_train_test_5layers.prototxt
I0415 11:42:13.228338     1 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer cifar
I0415 11:42:13.228792     1 net.cpp:53] Initializing net from parameters: 
name: "CIFAR10_mlp"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip11"
  type: "InnerProduct"
  bottom: "data"
  top: "ip11"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip11"
  top: "ip11"
}
layer {
  name: "ip14"
  type: "InnerProduct"
  bottom: "ip11"
  top: "ip14"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "ip14"
  top: "ip14"
}
layer {
  name: "ip15"
  type: "InnerProduct"
  bottom: "ip14"
  top: "ip15"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "ip15"
  top: "ip15"
}
layer {
  name: "ip5"
  type: "InnerProduct"
  bottom: "ip15"
  top: "ip6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip6"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip6"
  bottom: "label"
  top: "loss"
}
I0415 11:42:13.229125     1 layer_factory.hpp:77] Creating layer cifar
I0415 11:42:13.269975     1 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_train_lmdb
I0415 11:42:13.271908     1 net.cpp:86] Creating Layer cifar
I0415 11:42:13.272017     1 net.cpp:382] cifar -> data
I0415 11:42:13.272272     1 net.cpp:382] cifar -> label
I0415 11:42:13.272444     1 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0415 11:42:13.274983     1 data_layer.cpp:45] output data size: 100,3,32,32
I0415 11:42:13.275483     1 net.cpp:124] Setting up cifar
I0415 11:42:13.275550     1 net.cpp:131] Top shape: 100 3 32 32 (307200)
I0415 11:42:13.275585     1 net.cpp:131] Top shape: 100 (100)
I0415 11:42:13.275616     1 net.cpp:139] Memory required for data: 1229200
I0415 11:42:13.275646     1 layer_factory.hpp:77] Creating layer label_cifar_1_split
I0415 11:42:13.275722     1 net.cpp:86] Creating Layer label_cifar_1_split
I0415 11:42:13.275809     1 net.cpp:408] label_cifar_1_split <- label
I0415 11:42:13.276020     1 net.cpp:382] label_cifar_1_split -> label_cifar_1_split_0
I0415 11:42:13.277039     1 net.cpp:382] label_cifar_1_split -> label_cifar_1_split_1
I0415 11:42:13.277143     1 net.cpp:124] Setting up label_cifar_1_split
I0415 11:42:13.277174     1 net.cpp:131] Top shape: 100 (100)
I0415 11:42:13.277200     1 net.cpp:131] Top shape: 100 (100)
I0415 11:42:13.277220     1 net.cpp:139] Memory required for data: 1230000
I0415 11:42:13.277258     1 layer_factory.hpp:77] Creating layer ip11
I0415 11:42:13.277381     1 net.cpp:86] Creating Layer ip11
I0415 11:42:13.277511     1 net.cpp:408] ip11 <- data
I0415 11:42:13.277546     1 net.cpp:382] ip11 -> ip11
I0415 11:42:13.294124     1 net.cpp:124] Setting up ip11
I0415 11:42:13.294258     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.294287     1 net.cpp:139] Memory required for data: 1434800
I0415 11:42:13.294487     1 layer_factory.hpp:77] Creating layer relu1
I0415 11:42:13.294574     1 net.cpp:86] Creating Layer relu1
I0415 11:42:13.294617     1 net.cpp:408] relu1 <- ip11
I0415 11:42:13.294658     1 net.cpp:369] relu1 -> ip11 (in-place)
I0415 11:42:13.294787     1 net.cpp:124] Setting up relu1
I0415 11:42:13.294901     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.294944     1 net.cpp:139] Memory required for data: 1639600
I0415 11:42:13.294971     1 layer_factory.hpp:77] Creating layer ip14
I0415 11:42:13.295014     1 net.cpp:86] Creating Layer ip14
I0415 11:42:13.295040     1 net.cpp:408] ip14 <- ip11
I0415 11:42:13.295212     1 net.cpp:382] ip14 -> ip14
I0415 11:42:13.297824     1 net.cpp:124] Setting up ip14
I0415 11:42:13.297909     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.298027     1 net.cpp:139] Memory required for data: 1844400
I0415 11:42:13.298136     1 layer_factory.hpp:77] Creating layer relu4
I0415 11:42:13.298177     1 net.cpp:86] Creating Layer relu4
I0415 11:42:13.298202     1 net.cpp:408] relu4 <- ip14
I0415 11:42:13.298228     1 net.cpp:369] relu4 -> ip14 (in-place)
I0415 11:42:13.298254     1 net.cpp:124] Setting up relu4
I0415 11:42:13.298279     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.298300     1 net.cpp:139] Memory required for data: 2049200
I0415 11:42:13.298321     1 layer_factory.hpp:77] Creating layer ip15
I0415 11:42:13.298421     1 net.cpp:86] Creating Layer ip15
I0415 11:42:13.298512     1 net.cpp:408] ip15 <- ip14
I0415 11:42:13.298557     1 net.cpp:382] ip15 -> ip15
I0415 11:42:13.300765     1 net.cpp:124] Setting up ip15
I0415 11:42:13.300853     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.300879     1 net.cpp:139] Memory required for data: 2254000
I0415 11:42:13.300998     1 layer_factory.hpp:77] Creating layer relu5
I0415 11:42:13.301337     1 net.cpp:86] Creating Layer relu5
I0415 11:42:13.301425     1 net.cpp:408] relu5 <- ip15
I0415 11:42:13.301539     1 net.cpp:369] relu5 -> ip15 (in-place)
I0415 11:42:13.301653     1 net.cpp:124] Setting up relu5
I0415 11:42:13.301694     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.301718     1 net.cpp:139] Memory required for data: 2458800
I0415 11:42:13.301750     1 layer_factory.hpp:77] Creating layer ip5
I0415 11:42:13.301790     1 net.cpp:86] Creating Layer ip5
I0415 11:42:13.301949     1 net.cpp:408] ip5 <- ip15
I0415 11:42:13.301995     1 net.cpp:382] ip5 -> ip6
I0415 11:42:13.305704     1 net.cpp:124] Setting up ip5
I0415 11:42:13.305982     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.306098     1 net.cpp:139] Memory required for data: 2663600
I0415 11:42:13.306316     1 layer_factory.hpp:77] Creating layer ip6_ip5_0_split
I0415 11:42:13.306514     1 net.cpp:86] Creating Layer ip6_ip5_0_split
I0415 11:42:13.306663     1 net.cpp:408] ip6_ip5_0_split <- ip6
I0415 11:42:13.306696     1 net.cpp:382] ip6_ip5_0_split -> ip6_ip5_0_split_0
I0415 11:42:13.306814     1 net.cpp:382] ip6_ip5_0_split -> ip6_ip5_0_split_1
I0415 11:42:13.306944     1 net.cpp:124] Setting up ip6_ip5_0_split
I0415 11:42:13.306984     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.307013     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.307044     1 net.cpp:139] Memory required for data: 3073200
I0415 11:42:13.307170     1 layer_factory.hpp:77] Creating layer accuracy
I0415 11:42:13.307265     1 net.cpp:86] Creating Layer accuracy
I0415 11:42:13.307302     1 net.cpp:408] accuracy <- ip6_ip5_0_split_0
I0415 11:42:13.307328     1 net.cpp:408] accuracy <- label_cifar_1_split_0
I0415 11:42:13.307355     1 net.cpp:382] accuracy -> accuracy
I0415 11:42:13.307382     1 net.cpp:124] Setting up accuracy
I0415 11:42:13.307407     1 net.cpp:131] Top shape: (1)
I0415 11:42:13.307494     1 net.cpp:139] Memory required for data: 3073204
I0415 11:42:13.307576     1 layer_factory.hpp:77] Creating layer loss
I0415 11:42:13.307617     1 net.cpp:86] Creating Layer loss
I0415 11:42:13.307646     1 net.cpp:408] loss <- ip6_ip5_0_split_1
I0415 11:42:13.307672     1 net.cpp:408] loss <- label_cifar_1_split_1
I0415 11:42:13.307696     1 net.cpp:382] loss -> loss
I0415 11:42:13.307727     1 layer_factory.hpp:77] Creating layer loss
I0415 11:42:13.307986     1 net.cpp:124] Setting up loss
I0415 11:42:13.308050     1 net.cpp:131] Top shape: (1)
I0415 11:42:13.308142     1 net.cpp:134]     with loss weight 1
I0415 11:42:13.308269     1 net.cpp:139] Memory required for data: 3073208
I0415 11:42:13.308301     1 net.cpp:200] loss needs backward computation.
I0415 11:42:13.308471     1 net.cpp:202] accuracy does not need backward computation.
I0415 11:42:13.308511     1 net.cpp:200] ip6_ip5_0_split needs backward computation.
I0415 11:42:13.308548     1 net.cpp:200] ip5 needs backward computation.
I0415 11:42:13.308573     1 net.cpp:200] relu5 needs backward computation.
I0415 11:42:13.308604     1 net.cpp:200] ip15 needs backward computation.
I0415 11:42:13.308634     1 net.cpp:200] relu4 needs backward computation.
I0415 11:42:13.308729     1 net.cpp:200] ip14 needs backward computation.
I0415 11:42:13.308818     1 net.cpp:200] relu1 needs backward computation.
I0415 11:42:13.308856     1 net.cpp:200] ip11 needs backward computation.
I0415 11:42:13.308881     1 net.cpp:202] label_cifar_1_split does not need backward computation.
I0415 11:42:13.308903     1 net.cpp:202] cifar does not need backward computation.
I0415 11:42:13.308925     1 net.cpp:244] This network produces output accuracy
I0415 11:42:13.308945     1 net.cpp:244] This network produces output loss
I0415 11:42:13.308974     1 net.cpp:257] Network initialization done.
I0415 11:42:13.312105     1 solver.cpp:173] Creating test net (#0) specified by net file: examples/cifar10/cifar10_mlp_train_test_5layers.prototxt
I0415 11:42:13.312500     1 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer cifar
I0415 11:42:13.312834     1 net.cpp:53] Initializing net from parameters: 
name: "CIFAR10_mlp"
state {
  phase: TEST
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip11"
  type: "InnerProduct"
  bottom: "data"
  top: "ip11"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip11"
  top: "ip11"
}
layer {
  name: "ip14"
  type: "InnerProduct"
  bottom: "ip11"
  top: "ip14"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "ip14"
  top: "ip14"
}
layer {
  name: "ip15"
  type: "InnerProduct"
  bottom: "ip14"
  top: "ip15"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "ip15"
  top: "ip15"
}
layer {
  name: "ip5"
  type: "InnerProduct"
  bottom: "ip15"
  top: "ip6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip6"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip6"
  bottom: "label"
  top: "loss"
}
I0415 11:42:13.313129     1 layer_factory.hpp:77] Creating layer cifar
I0415 11:42:13.324406     1 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_test_lmdb
I0415 11:42:13.325685     1 net.cpp:86] Creating Layer cifar
I0415 11:42:13.325804     1 net.cpp:382] cifar -> data
I0415 11:42:13.325995     1 net.cpp:382] cifar -> label
I0415 11:42:13.326076     1 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0415 11:42:13.328425     1 data_layer.cpp:45] output data size: 100,3,32,32
I0415 11:42:13.328874     1 net.cpp:124] Setting up cifar
I0415 11:42:13.328948     1 net.cpp:131] Top shape: 100 3 32 32 (307200)
I0415 11:42:13.329020     1 net.cpp:131] Top shape: 100 (100)
I0415 11:42:13.329088     1 net.cpp:139] Memory required for data: 1229200
I0415 11:42:13.329176     1 layer_factory.hpp:77] Creating layer label_cifar_1_split
I0415 11:42:13.329352     1 net.cpp:86] Creating Layer label_cifar_1_split
I0415 11:42:13.329769     1 net.cpp:408] label_cifar_1_split <- label
I0415 11:42:13.329844     1 net.cpp:382] label_cifar_1_split -> label_cifar_1_split_0
I0415 11:42:13.329880     1 net.cpp:382] label_cifar_1_split -> label_cifar_1_split_1
I0415 11:42:13.329913     1 net.cpp:124] Setting up label_cifar_1_split
I0415 11:42:13.329941     1 net.cpp:131] Top shape: 100 (100)
I0415 11:42:13.329977     1 net.cpp:131] Top shape: 100 (100)
I0415 11:42:13.330014     1 net.cpp:139] Memory required for data: 1230000
I0415 11:42:13.330070     1 layer_factory.hpp:77] Creating layer ip11
I0415 11:42:13.330379     1 net.cpp:86] Creating Layer ip11
I0415 11:42:13.330404     1 net.cpp:408] ip11 <- data
I0415 11:42:13.330430     1 net.cpp:382] ip11 -> ip11
I0415 11:42:13.347741     1 net.cpp:124] Setting up ip11
I0415 11:42:13.347884     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.347913     1 net.cpp:139] Memory required for data: 1434800
I0415 11:42:13.348080     1 layer_factory.hpp:77] Creating layer relu1
I0415 11:42:13.348209     1 net.cpp:86] Creating Layer relu1
I0415 11:42:13.348263     1 net.cpp:408] relu1 <- ip11
I0415 11:42:13.348301     1 net.cpp:369] relu1 -> ip11 (in-place)
I0415 11:42:13.348469     1 net.cpp:124] Setting up relu1
I0415 11:42:13.348516     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.348541     1 net.cpp:139] Memory required for data: 1639600
I0415 11:42:13.348564     1 layer_factory.hpp:77] Creating layer ip14
I0415 11:42:13.348727     1 net.cpp:86] Creating Layer ip14
I0415 11:42:13.348768     1 net.cpp:408] ip14 <- ip11
I0415 11:42:13.348809     1 net.cpp:382] ip14 -> ip14
I0415 11:42:13.351008     1 net.cpp:124] Setting up ip14
I0415 11:42:13.351117     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.351220     1 net.cpp:139] Memory required for data: 1844400
I0415 11:42:13.351335     1 layer_factory.hpp:77] Creating layer relu4
I0415 11:42:13.351387     1 net.cpp:86] Creating Layer relu4
I0415 11:42:13.351485     1 net.cpp:408] relu4 <- ip14
I0415 11:42:13.351588     1 net.cpp:369] relu4 -> ip14 (in-place)
I0415 11:42:13.351697     1 net.cpp:124] Setting up relu4
I0415 11:42:13.351783     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.351817     1 net.cpp:139] Memory required for data: 2049200
I0415 11:42:13.351841     1 layer_factory.hpp:77] Creating layer ip15
I0415 11:42:13.351869     1 net.cpp:86] Creating Layer ip15
I0415 11:42:13.351953     1 net.cpp:408] ip15 <- ip14
I0415 11:42:13.352068     1 net.cpp:382] ip15 -> ip15
I0415 11:42:13.354668     1 net.cpp:124] Setting up ip15
I0415 11:42:13.354758     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.354941     1 net.cpp:139] Memory required for data: 2254000
I0415 11:42:13.355017     1 layer_factory.hpp:77] Creating layer relu5
I0415 11:42:13.355049     1 net.cpp:86] Creating Layer relu5
I0415 11:42:13.355074     1 net.cpp:408] relu5 <- ip15
I0415 11:42:13.355103     1 net.cpp:369] relu5 -> ip15 (in-place)
I0415 11:42:13.355199     1 net.cpp:124] Setting up relu5
I0415 11:42:13.355294     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.355329     1 net.cpp:139] Memory required for data: 2458800
I0415 11:42:13.355352     1 layer_factory.hpp:77] Creating layer ip5
I0415 11:42:13.355381     1 net.cpp:86] Creating Layer ip5
I0415 11:42:13.355404     1 net.cpp:408] ip5 <- ip15
I0415 11:42:13.355428     1 net.cpp:382] ip5 -> ip6
I0415 11:42:13.358959     1 net.cpp:124] Setting up ip5
I0415 11:42:13.359037     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.359063     1 net.cpp:139] Memory required for data: 2663600
I0415 11:42:13.359093     1 layer_factory.hpp:77] Creating layer ip6_ip5_0_split
I0415 11:42:13.359213     1 net.cpp:86] Creating Layer ip6_ip5_0_split
I0415 11:42:13.359325     1 net.cpp:408] ip6_ip5_0_split <- ip6
I0415 11:42:13.359372     1 net.cpp:382] ip6_ip5_0_split -> ip6_ip5_0_split_0
I0415 11:42:13.359414     1 net.cpp:382] ip6_ip5_0_split -> ip6_ip5_0_split_1
I0415 11:42:13.359458     1 net.cpp:124] Setting up ip6_ip5_0_split
I0415 11:42:13.359570     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.359657     1 net.cpp:131] Top shape: 100 512 (51200)
I0415 11:42:13.359693     1 net.cpp:139] Memory required for data: 3073200
I0415 11:42:13.359715     1 layer_factory.hpp:77] Creating layer accuracy
I0415 11:42:13.359740     1 net.cpp:86] Creating Layer accuracy
I0415 11:42:13.359761     1 net.cpp:408] accuracy <- ip6_ip5_0_split_0
I0415 11:42:13.359786     1 net.cpp:408] accuracy <- label_cifar_1_split_0
I0415 11:42:13.359808     1 net.cpp:382] accuracy -> accuracy
I0415 11:42:13.359899     1 net.cpp:124] Setting up accuracy
I0415 11:42:13.359993     1 net.cpp:131] Top shape: (1)
I0415 11:42:13.360031     1 net.cpp:139] Memory required for data: 3073204
I0415 11:42:13.360059     1 layer_factory.hpp:77] Creating layer loss
I0415 11:42:13.360087     1 net.cpp:86] Creating Layer loss
I0415 11:42:13.360119     1 net.cpp:408] loss <- ip6_ip5_0_split_1
I0415 11:42:13.360146     1 net.cpp:408] loss <- label_cifar_1_split_1
I0415 11:42:13.360186     1 net.cpp:382] loss -> loss
I0415 11:42:13.360225     1 layer_factory.hpp:77] Creating layer loss
I0415 11:42:13.360496     1 net.cpp:124] Setting up loss
I0415 11:42:13.360551     1 net.cpp:131] Top shape: (1)
I0415 11:42:13.360651     1 net.cpp:134]     with loss weight 1
I0415 11:42:13.360786     1 net.cpp:139] Memory required for data: 3073208
I0415 11:42:13.360908     1 net.cpp:200] loss needs backward computation.
I0415 11:42:13.361009     1 net.cpp:202] accuracy does not need backward computation.
I0415 11:42:13.361098     1 net.cpp:200] ip6_ip5_0_split needs backward computation.
I0415 11:42:13.361126     1 net.cpp:200] ip5 needs backward computation.
I0415 11:42:13.361210     1 net.cpp:200] relu5 needs backward computation.
I0415 11:42:13.361269     1 net.cpp:200] ip15 needs backward computation.
I0415 11:42:13.361335     1 net.cpp:200] relu4 needs backward computation.
I0415 11:42:13.361371     1 net.cpp:200] ip14 needs backward computation.
I0415 11:42:13.361404     1 net.cpp:200] relu1 needs backward computation.
I0415 11:42:13.361428     1 net.cpp:200] ip11 needs backward computation.
I0415 11:42:13.361462     1 net.cpp:202] label_cifar_1_split does not need backward computation.
I0415 11:42:13.361567     1 net.cpp:202] cifar does not need backward computation.
I0415 11:42:13.361668     1 net.cpp:244] This network produces output accuracy
I0415 11:42:13.361706     1 net.cpp:244] This network produces output loss
I0415 11:42:13.361749     1 net.cpp:257] Network initialization done.
I0415 11:42:13.361917     1 solver.cpp:56] Solver scaffolding done.
I0415 11:42:13.362051     1 caffe.cpp:248] Starting Optimization
I0415 11:42:13.362107     1 solver.cpp:273] Solving CIFAR10_mlp
I0415 11:42:13.362130     1 solver.cpp:274] Learning Rate Policy: fixed
I0415 11:42:13.365372     1 solver.cpp:331] Iteration 0, Testing net (#0)
I0415 11:42:16.795439     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:42:16.938872     1 solver.cpp:398]     Test net output #0: accuracy = 0
I0415 11:42:16.939065     1 solver.cpp:398]     Test net output #1: loss = 84.2345 (* 1 = 84.2345 loss)
I0415 11:42:17.199445     1 solver.cpp:219] Iteration 0 (0 iter/s, 3.837s/1000 iters), loss = 84.7452
I0415 11:42:17.199759     1 solver.cpp:238]     Train net output #0: accuracy = 0
I0415 11:42:17.199936     1 solver.cpp:238]     Train net output #1: loss = 84.7452 (* 1 = 84.7452 loss)
I0415 11:42:17.200202     1 sgd_solver.cpp:105] Iteration 0, lr = 0.0001
I0415 11:43:12.772897     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:43:58.202720     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:43:58.532270     1 solver.cpp:458] Snapshotting to HDF5 file temp/mlp_simple_iter_1000.caffemodel.h5
I0415 11:43:58.612900     1 sgd_solver.cpp:283] Snapshotting solver state to HDF5 file temp/mlp_simple_iter_1000.solverstate.h5
I0415 11:43:58.693081     1 solver.cpp:331] Iteration 1000, Testing net (#0)
I0415 11:44:01.787864     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:44:01.922701     1 solver.cpp:398]     Test net output #0: accuracy = 0.3945
I0415 11:44:01.922786     1 solver.cpp:398]     Test net output #1: loss = 1.69816 (* 1 = 1.69816 loss)
I0415 11:44:01.991883     1 solver.cpp:219] Iteration 1000 (9.54271 iter/s, 104.792s/1000 iters), loss = 1.71507
I0415 11:44:01.991982     1 solver.cpp:238]     Train net output #0: accuracy = 0.44
I0415 11:44:01.991999     1 solver.cpp:238]     Train net output #1: loss = 1.71507 (* 1 = 1.71507 loss)
I0415 11:44:01.992009     1 sgd_solver.cpp:105] Iteration 1000, lr = 0.0001
I0415 11:44:47.297036     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:45:39.092839     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:45:39.420123     1 solver.cpp:458] Snapshotting to HDF5 file temp/mlp_simple_iter_2000.caffemodel.h5
I0415 11:45:39.494019     1 sgd_solver.cpp:283] Snapshotting solver state to HDF5 file temp/mlp_simple_iter_2000.solverstate.h5
I0415 11:45:39.573433     1 solver.cpp:331] Iteration 2000, Testing net (#0)
I0415 11:45:42.628408     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:45:42.757916     1 solver.cpp:398]     Test net output #0: accuracy = 0.4258
I0415 11:45:42.757997     1 solver.cpp:398]     Test net output #1: loss = 1.62128 (* 1 = 1.62128 loss)
I0415 11:45:42.825053     1 solver.cpp:219] Iteration 2000 (9.91739 iter/s, 100.833s/1000 iters), loss = 1.58627
I0415 11:45:42.825135     1 solver.cpp:238]     Train net output #0: accuracy = 0.5
I0415 11:45:42.825152     1 solver.cpp:238]     Train net output #1: loss = 1.58627 (* 1 = 1.58627 loss)
I0415 11:45:42.825162     1 sgd_solver.cpp:105] Iteration 2000, lr = 0.0001
I0415 11:46:32.354694     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:47:24.374075     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:47:24.837148     1 solver.cpp:458] Snapshotting to HDF5 file temp/mlp_simple_iter_3000.caffemodel.h5
I0415 11:47:24.910740     1 sgd_solver.cpp:283] Snapshotting solver state to HDF5 file temp/mlp_simple_iter_3000.solverstate.h5
I0415 11:47:25.134017     1 solver.cpp:331] Iteration 3000, Testing net (#0)
I0415 11:47:28.836746     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:47:28.980253     1 solver.cpp:398]     Test net output #0: accuracy = 0.449
I0415 11:47:28.980341     1 solver.cpp:398]     Test net output #1: loss = 1.57729 (* 1 = 1.57729 loss)
I0415 11:47:29.055155     1 solver.cpp:219] Iteration 3000 (9.41354 iter/s, 106.23s/1000 iters), loss = 1.45824
I0415 11:47:29.055239     1 solver.cpp:238]     Train net output #0: accuracy = 0.51
I0415 11:47:29.055258     1 solver.cpp:238]     Train net output #1: loss = 1.45824 (* 1 = 1.45824 loss)
I0415 11:47:29.055266     1 sgd_solver.cpp:105] Iteration 3000, lr = 0.0001
I0415 11:48:16.623102     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:49:02.350492     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:49:02.673144     1 solver.cpp:458] Snapshotting to HDF5 file temp/mlp_simple_iter_4000.caffemodel.h5
I0415 11:49:02.743563     1 sgd_solver.cpp:283] Snapshotting solver state to HDF5 file temp/mlp_simple_iter_4000.solverstate.h5
I0415 11:49:02.828780     1 solver.cpp:331] Iteration 4000, Testing net (#0)
I0415 11:49:05.885254     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:49:06.012001     1 solver.cpp:398]     Test net output #0: accuracy = 0.4599
I0415 11:49:06.012099     1 solver.cpp:398]     Test net output #1: loss = 1.55704 (* 1 = 1.55704 loss)
I0415 11:49:06.080379     1 solver.cpp:219] Iteration 4000 (10.3066 iter/s, 97.025s/1000 iters), loss = 1.3949
I0415 11:49:06.080473     1 solver.cpp:238]     Train net output #0: accuracy = 0.52
I0415 11:49:06.080490     1 solver.cpp:238]     Train net output #1: loss = 1.3949 (* 1 = 1.3949 loss)
I0415 11:49:06.080499     1 sgd_solver.cpp:105] Iteration 4000, lr = 0.0001
I0415 11:49:52.608803     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:50:41.606390     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:50:41.988062     1 solver.cpp:458] Snapshotting to HDF5 file temp/mlp_simple_iter_5000.caffemodel.h5
I0415 11:50:42.067178     1 sgd_solver.cpp:283] Snapshotting solver state to HDF5 file temp/mlp_simple_iter_5000.solverstate.h5
I0415 11:50:42.182345     1 solver.cpp:331] Iteration 5000, Testing net (#0)
I0415 11:50:45.600289     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:50:45.748615     1 solver.cpp:398]     Test net output #0: accuracy = 0.468
I0415 11:50:45.748718     1 solver.cpp:398]     Test net output #1: loss = 1.56054 (* 1 = 1.56054 loss)
I0415 11:50:45.828893     1 solver.cpp:219] Iteration 5000 (10.0253 iter/s, 99.748s/1000 iters), loss = 1.28833
I0415 11:50:45.828992     1 solver.cpp:238]     Train net output #0: accuracy = 0.55
I0415 11:50:45.829010     1 solver.cpp:238]     Train net output #1: loss = 1.28833 (* 1 = 1.28833 loss)
I0415 11:50:45.829020     1 sgd_solver.cpp:105] Iteration 5000, lr = 0.0001
I0415 11:51:33.940309     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:52:18.498778     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:52:18.890447     1 solver.cpp:458] Snapshotting to HDF5 file temp/mlp_simple_iter_6000.caffemodel.h5
I0415 11:52:18.977794     1 sgd_solver.cpp:283] Snapshotting solver state to HDF5 file temp/mlp_simple_iter_6000.solverstate.h5
I0415 11:52:19.073284     1 solver.cpp:331] Iteration 6000, Testing net (#0)
I0415 11:52:22.566756     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:52:22.709193     1 solver.cpp:398]     Test net output #0: accuracy = 0.4693
I0415 11:52:22.709283     1 solver.cpp:398]     Test net output #1: loss = 1.56878 (* 1 = 1.56878 loss)
I0415 11:52:22.784253     1 solver.cpp:219] Iteration 6000 (10.3141 iter/s, 96.955s/1000 iters), loss = 1.1675
I0415 11:52:22.784355     1 solver.cpp:238]     Train net output #0: accuracy = 0.56
I0415 11:52:22.784390     1 solver.cpp:238]     Train net output #1: loss = 1.1675 (* 1 = 1.1675 loss)
I0415 11:52:22.784407     1 sgd_solver.cpp:105] Iteration 6000, lr = 0.0001
I0415 11:53:08.502457     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:53:58.779397     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:53:59.153022     1 solver.cpp:458] Snapshotting to HDF5 file temp/mlp_simple_iter_7000.caffemodel.h5
I0415 11:53:59.227526     1 sgd_solver.cpp:283] Snapshotting solver state to HDF5 file temp/mlp_simple_iter_7000.solverstate.h5
I0415 11:53:59.305809     1 solver.cpp:331] Iteration 7000, Testing net (#0)
I0415 11:54:02.598500     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:54:02.733535     1 solver.cpp:398]     Test net output #0: accuracy = 0.4731
I0415 11:54:02.733630     1 solver.cpp:398]     Test net output #1: loss = 1.5922 (* 1 = 1.5922 loss)
I0415 11:54:02.804925     1 solver.cpp:219] Iteration 7000 (9.998 iter/s, 100.02s/1000 iters), loss = 1.0086
I0415 11:54:02.805016     1 solver.cpp:238]     Train net output #0: accuracy = 0.61
I0415 11:54:02.805034     1 solver.cpp:238]     Train net output #1: loss = 1.0086 (* 1 = 1.0086 loss)
I0415 11:54:02.805043     1 sgd_solver.cpp:105] Iteration 7000, lr = 0.0001
I0415 11:54:50.318506     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:55:36.265614     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:55:36.634711     1 solver.cpp:458] Snapshotting to HDF5 file temp/mlp_simple_iter_8000.caffemodel.h5
I0415 11:55:36.740104     1 sgd_solver.cpp:283] Snapshotting solver state to HDF5 file temp/mlp_simple_iter_8000.solverstate.h5
I0415 11:55:36.843361     1 solver.cpp:331] Iteration 8000, Testing net (#0)
I0415 11:55:40.317687     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:55:40.450199     1 solver.cpp:398]     Test net output #0: accuracy = 0.4708
I0415 11:55:40.450285     1 solver.cpp:398]     Test net output #1: loss = 1.63352 (* 1 = 1.63352 loss)
I0415 11:55:40.523952     1 solver.cpp:219] Iteration 8000 (10.2335 iter/s, 97.718s/1000 iters), loss = 0.885979
I0415 11:55:40.524045     1 solver.cpp:238]     Train net output #0: accuracy = 0.67
I0415 11:55:40.524061     1 solver.cpp:238]     Train net output #1: loss = 0.885979 (* 1 = 0.885979 loss)
I0415 11:55:40.524071     1 sgd_solver.cpp:105] Iteration 8000, lr = 0.0001
I0415 11:56:28.287569     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:57:15.557005     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:57:15.901512     1 solver.cpp:458] Snapshotting to HDF5 file temp/mlp_simple_iter_9000.caffemodel.h5
I0415 11:57:16.098515     1 sgd_solver.cpp:283] Snapshotting solver state to HDF5 file temp/mlp_simple_iter_9000.solverstate.h5
I0415 11:57:16.177311     1 solver.cpp:331] Iteration 9000, Testing net (#0)
I0415 11:57:19.542062     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:57:19.680711     1 solver.cpp:398]     Test net output #0: accuracy = 0.4747
I0415 11:57:19.680797     1 solver.cpp:398]     Test net output #1: loss = 1.67753 (* 1 = 1.67753 loss)
I0415 11:57:19.754998     1 solver.cpp:219] Iteration 9000 (10.0776 iter/s, 99.23s/1000 iters), loss = 0.775226
I0415 11:57:19.755084     1 solver.cpp:238]     Train net output #0: accuracy = 0.68
I0415 11:57:19.755110     1 solver.cpp:238]     Train net output #1: loss = 0.775226 (* 1 = 0.775226 loss)
I0415 11:57:19.755127     1 sgd_solver.cpp:105] Iteration 9000, lr = 0.0001
I0415 11:58:03.446310     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:58:49.968032     6 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:58:50.295707     1 solver.cpp:458] Snapshotting to HDF5 file temp/mlp_simple_iter_10000.caffemodel.h5
I0415 11:58:50.373352     1 sgd_solver.cpp:283] Snapshotting solver state to HDF5 file temp/mlp_simple_iter_10000.solverstate.h5
I0415 11:58:50.492569     1 solver.cpp:311] Iteration 10000, loss = 0.727011
I0415 11:58:50.492643     1 solver.cpp:331] Iteration 10000, Testing net (#0)
I0415 11:58:53.649866     7 data_layer.cpp:73] Restarting data prefetching from start.
I0415 11:58:53.778280     1 solver.cpp:398]     Test net output #0: accuracy = 0.4683
I0415 11:58:53.778362     1 solver.cpp:398]     Test net output #1: loss = 1.75799 (* 1 = 1.75799 loss)
I0415 11:58:53.778373     1 solver.cpp:316] Optimization Done.
I0415 11:58:53.778378     1 caffe.cpp:259] Optimization Done.
